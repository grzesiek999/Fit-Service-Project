{"ast":null,"code":"var _jsxFileName = \"/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/pages/LoginPage/LoginPage.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  setName\n}) => {\n  /*\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n    const [message, setMessage] = useState('');\n  \n    const handleEmail = (email :string) => {\n      setEmail(email);\n    };\n    \n    const handlePassword = (password :string) => {\n      setPassword(password);\n    };\n  \n  \n    const submit = async (e: SyntheticEvent) => {\n      e.preventDefault();\n  \n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        credentials: 'include',\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if(response.ok){\n        const content = await response.json();\n        setName(content.name);\n        return navigate('/');\n      }\n      else {\n        if(response.status === 403){\n          return setMessage('Nieprawidłowy email lub hasło');\n        }\n        else {\n          console.error('Error', response.status, response.statusText);\n        }\n      }\n    }\n  */\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Zaloguj sie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoginPage","setName","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import React, {SyntheticEvent, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport EmailRegisterInput from '../../components/atoms/inputs/EmailRegisterInput';\nimport PasswordRegisterInput from '../../components/atoms/inputs/PasswordRegisterInput';\n\n\n\nconst LoginPage = ({setName}: {setName: (name: string) => void}) => {\n/*\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const [message, setMessage] = useState('');\n\n  const handleEmail = (email :string) => {\n    setEmail(email);\n  };\n  \n  const handlePassword = (password :string) => {\n    setPassword(password);\n  };\n\n\n  const submit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    const response = await fetch('http://localhost:8000/api/login', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if(response.ok){\n      const content = await response.json();\n      setName(content.name);\n      return navigate('/');\n    }\n    else {\n      if(response.status === 403){\n        return setMessage('Nieprawidłowy email lub hasło');\n      }\n      else {\n        console.error('Error', response.status, response.statusText);\n      }\n    }\n  }\n*/\n  return (\n    <main>\n      <h1>Zaloguj sie</h1>\n    </main>\n  );\n}\n\nexport default LoginPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAkC,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtD,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAA0C,CAAC,KAAK;EACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,oBACEF,OAAA;IAAAG,QAAA,eACEH,OAAA;MAAAG,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEX,CAAC;AAAAC,EAAA,GAhDKP,SAAS;AAkDf,eAAeA,SAAS;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}