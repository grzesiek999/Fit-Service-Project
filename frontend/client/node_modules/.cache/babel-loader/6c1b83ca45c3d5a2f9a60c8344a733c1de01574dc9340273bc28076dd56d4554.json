{"ast":null,"code":"var _jsxFileName = \"/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/components/tmpls/SetNewPasswordPageTemplate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../atoms/buttons/Button\";\nimport PasswordRegisterInput from \"../atoms/inputs/PasswordRegisterInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetNewPasswordPageTemplate = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handlePassword = password => {\n    setPassword(password);\n  };\n  const handleConfirmPassword = password => {\n    setConfirmPassword(password);\n  };\n  const submit = async e => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      const response = await fetch('http://localhost:8000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      if (response.ok) {\n        return navigate('/register_successful');\n      } else {\n        console.error('Error', response.status, response.statusText);\n        return setMessage('Error');\n      }\n    } else {\n      return setMessage('Podane hasła nie są takie same');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(PasswordRegisterInput, {\n        onPasswordChange: handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PasswordRegisterInput, {\n        onPasswordChange: handleConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: \"submit\",\n        className: \"\",\n        onClick: () => {},\n        buttonTittle: \"Ustaw nowe has\\u0142o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(SetNewPasswordPageTemplate, \"qMrTao5A4G03+mvrRnqyiovOfFU=\", false, function () {\n  return [useNavigate];\n});\n_c = SetNewPasswordPageTemplate;\nexport default SetNewPasswordPageTemplate;\nvar _c;\n$RefreshReg$(_c, \"SetNewPasswordPageTemplate\");","map":{"version":3,"names":["React","useState","useNavigate","Button","PasswordRegisterInput","jsxDEV","_jsxDEV","SetNewPasswordPageTemplate","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","handlePassword","handleConfirmPassword","submit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","statusText","children","onSubmit","onPasswordChange","fileName","_jsxFileName","lineNumber","columnNumber","buttonType","className","onClick","buttonTittle","_c","$RefreshReg$"],"sources":["/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/components/tmpls/SetNewPasswordPageTemplate.tsx"],"sourcesContent":["import React, {useState, SyntheticEvent} from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Button from \"../atoms/buttons/Button\";\nimport PasswordRegisterInput from \"../atoms/inputs/PasswordRegisterInput\";\n\n\nconst SetNewPasswordPageTemplate = () => {\n\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const navigate = useNavigate();\n\n\n    const handlePassword = (password :string) => {\n        setPassword(password);\n    };\n    \n    const handleConfirmPassword = (password :string) => {\n        setConfirmPassword(password);\n    };\n    \n    const submit = async (e: SyntheticEvent) =>{\n        e.preventDefault();\n\n        if(password === confirmPassword) {\n          const response = await fetch('http://localhost:8000/api/register', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              password\n            })\n          })\n          if(response.ok){\n            return navigate('/register_successful');\n          }\n          else{\n            console.error('Error', response.status, response.statusText);\n            return setMessage('Error');\n          }\n        }\n        else {\n          return setMessage('Podane hasła nie są takie same');\n        }\n    }\n    \n\n    return(\n        <div>\n            <form onSubmit={submit}>\n                <PasswordRegisterInput onPasswordChange={ handlePassword} />\n                <PasswordRegisterInput onPasswordChange={ handleConfirmPassword} />\n                <Button buttonType=\"submit\" className=\"\" onClick={()=>{}} buttonTittle=\"Ustaw nowe hasło\" />\n            </form>\n        </div>\n    );\n}\n\nexport default SetNewPasswordPageTemplate"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAuB,OAAO;AACrD,SAASC,WAAW,QAAmB,kBAAkB;AACzD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,qBAAqB,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1E,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAG9B,MAAMc,cAAc,GAAIP,QAAgB,IAAK;IACzCC,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMQ,qBAAqB,GAAIR,QAAgB,IAAK;IAChDG,kBAAkB,CAACH,QAAQ,CAAC;EAChC,CAAC;EAED,MAAMS,MAAM,GAAG,MAAOC,CAAiB,IAAI;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAGX,QAAQ,KAAKE,eAAe,EAAE;MAC/B,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBlB;QACF,CAAC;MACH,CAAC,CAAC;MACF,IAAGY,QAAQ,CAACO,EAAE,EAAC;QACb,OAAOb,QAAQ,CAAC,sBAAsB,CAAC;MACzC,CAAC,MACG;QACFc,OAAO,CAACC,KAAK,CAAC,OAAO,EAAET,QAAQ,CAACU,MAAM,EAAEV,QAAQ,CAACW,UAAU,CAAC;QAC5D,OAAOlB,UAAU,CAAC,OAAO,CAAC;MAC5B;IACF,CAAC,MACI;MACH,OAAOA,UAAU,CAAC,gCAAgC,CAAC;IACrD;EACJ,CAAC;EAGD,oBACIR,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAM4B,QAAQ,EAAEhB,MAAO;MAAAe,QAAA,gBACnB3B,OAAA,CAACF,qBAAqB;QAAC+B,gBAAgB,EAAGnB;MAAe;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DjC,OAAA,CAACF,qBAAqB;QAAC+B,gBAAgB,EAAGlB;MAAsB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEjC,OAAA,CAACH,MAAM;QAACqC,UAAU,EAAC,QAAQ;QAACC,SAAS,EAAC,EAAE;QAACC,OAAO,EAAEA,CAAA,KAAI,CAAC,CAAE;QAACC,YAAY,EAAC;MAAkB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAA/B,EAAA,CAlDKD,0BAA0B;EAAA,QAKXL,WAAW;AAAA;AAAA0C,EAAA,GAL1BrC,0BAA0B;AAoDhC,eAAeA,0BAA0B;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}