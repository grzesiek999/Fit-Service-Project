{"ast":null,"code":"var _jsxFileName = \"/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/components/tmpls/AccountConfirmPageTemplate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountConfirmPageTemplate = () => {\n  _s();\n  const {\n    uid,\n    token\n  } = useParams();\n  const [active, setActive] = useState(false);\n  const [activeMessage, setActiveMessage] = useState('');\n  useEffect(() => {\n    const confirmEmail = async (uid, token) => {\n      if (uid && token) {\n        const response = await fetch('http://localhost:8000/api/confirm_email', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            uid,\n            token\n          })\n        });\n        if (response.ok) {\n          const content = await response.json();\n          setActiveMessage(content.message);\n          if (activeMessage === \"activation successful\") {\n            setActive(true);\n          }\n        } else {\n          console.error('response error');\n        }\n      }\n    };\n    confirmEmail(uid, token);\n  }, [uid, token, activeMessage, active]);\n  if (active === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Twoje konto zosta\\u0142o zaaktywowane!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Niewa\\u017Cny link aktywacyjny!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(AccountConfirmPageTemplate, \"CwJnI1vFOLFCyIW3hmJhCHsnyV0=\", false, function () {\n  return [useParams];\n});\n_c = AccountConfirmPageTemplate;\nexport default AccountConfirmPageTemplate;\nvar _c;\n$RefreshReg$(_c, \"AccountConfirmPageTemplate\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","AccountConfirmPageTemplate","_s","uid","token","active","setActive","activeMessage","setActiveMessage","confirmEmail","response","fetch","method","headers","body","JSON","stringify","ok","content","json","message","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/components/tmpls/AccountConfirmPageTemplate.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst AccountConfirmPageTemplate = () =>{\n\n    const {uid, token} = useParams();\n    const [active, setActive] = useState<boolean>(false);\n    const [activeMessage, setActiveMessage] = useState('');\n\n    useEffect(()=> {\n        const confirmEmail = async (uid:string | undefined, token:string | undefined) => {\n            if(uid && token){\n                const response = await fetch('http://localhost:8000/api/confirm_email', {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({\n                        uid,\n                        token\n                    })\n                });\n                if(response.ok){\n                    const content = await response.json();\n                    setActiveMessage(content.message);\n                    if(activeMessage === \"activation successful\"){\n                        setActive(true);\n                    }\n                }\n                else{\n                    console.error('response error');\n                }\n            }\n        }\n        confirmEmail(uid, token);\n    }, [uid, token, activeMessage, active]);\n\n    if(active === true){\n        return(\n            <div>\n                Twoje konto zostało zaaktywowane!\n            </div>\n        );\n    }\n    else{\n        return(\n            <div>\n                Nieważny link aktywacyjny!\n            </div>\n        );\n    }\n}\n\nexport default AccountConfirmPageTemplate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,0BAA0B,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAEpC,MAAM;IAACC,GAAG;IAAEC;EAAK,CAAC,GAAGN,SAAS,CAAC,CAAC;EAChC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EACpD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAK;IACX,MAAMa,YAAY,GAAG,MAAAA,CAAON,GAAsB,EAAEC,KAAwB,KAAK;MAC7E,IAAGD,GAAG,IAAIC,KAAK,EAAC;QACZ,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;UACpEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAC,cAAc,EAAE;UAAkB,CAAC;UAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBb,GAAG;YACHC;UACJ,CAAC;QACL,CAAC,CAAC;QACF,IAAGM,QAAQ,CAACO,EAAE,EAAC;UACX,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;UACrCX,gBAAgB,CAACU,OAAO,CAACE,OAAO,CAAC;UACjC,IAAGb,aAAa,KAAK,uBAAuB,EAAC;YACzCD,SAAS,CAAC,IAAI,CAAC;UACnB;QACJ,CAAC,MACG;UACAe,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;QACnC;MACJ;IACJ,CAAC;IACDb,YAAY,CAACN,GAAG,EAAEC,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACD,GAAG,EAAEC,KAAK,EAAEG,aAAa,EAAEF,MAAM,CAAC,CAAC;EAEvC,IAAGA,MAAM,KAAK,IAAI,EAAC;IACf,oBACIL,OAAA;MAAAuB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd,CAAC,MACG;IACA,oBACI3B,OAAA;MAAAuB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;AACJ,CAAC;AAAAzB,EAAA,CA9CKD,0BAA0B;EAAA,QAEPH,SAAS;AAAA;AAAA8B,EAAA,GAF5B3B,0BAA0B;AAgDhC,eAAeA,0BAA0B;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}