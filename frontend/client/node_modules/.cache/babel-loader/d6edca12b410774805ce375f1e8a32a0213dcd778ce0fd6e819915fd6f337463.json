{"ast":null,"code":"var _jsxFileName = \"/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/pages/RegisterPage/RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../styles/index.scss';\nimport { useNavigate } from 'react-router-dom';\nimport CreateAccountButton from '../../components/atoms/CreateAccountButton';\nimport PasswordInput from '../../components/atoms/PasswordRegisterInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handlePassword = password => {\n    setPassword(password);\n  };\n  const handleConfirmPassword = password => {\n    setConfirmPassword(password);\n  };\n  const handleFocus = (event, newPlaceholder) => {\n    event.currentTarget.placeholder = newPlaceholder;\n  };\n  const handleBlur = (event, newPlaceholder) => {\n    event.currentTarget.placeholder = newPlaceholder;\n  };\n  const submit = async e => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      const response = await fetch('http://localhost:8000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          name,\n          surname,\n          birthday\n        })\n      });\n      if (response.ok) {\n        return navigate('/register_successful');\n      } else {\n        console.error('Error', response.status, response.statusText);\n        return setMessage('Error');\n      }\n    } else {\n      return setMessage('Passwords do not match');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"register-input-form\",\n        placeholder: \"Imi\\u0119\",\n        onFocus: event => handleFocus(event, ''),\n        onBlur: event => handleBlur(event, 'Imię'),\n        required: true,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"register-input-form\",\n        placeholder: \"Nazwisko\",\n        onFocus: event => handleFocus(event, ''),\n        onBlur: event => handleBlur(event, 'Nazwisko'),\n        required: true,\n        onChange: e => setSurname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"register-input-form\",\n        required: true,\n        onChange: e => setBirthday(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"register-input-form\",\n        placeholder: \"email@gmail.com\",\n        onFocus: event => handleFocus(event, ''),\n        onBlur: event => handleBlur(event, 'email@gmail.com'),\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        onPasswordChange: handlePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n        onPasswordChange: handleConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateAccountButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"hPjoXkhbatJI6pNebdbOXLtCLvg=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","CreateAccountButton","PasswordInput","jsxDEV","_jsxDEV","RegisterPage","_s","name","setName","surname","setSurname","birthday","setBirthday","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigate","handlePassword","handleConfirmPassword","handleFocus","event","newPlaceholder","currentTarget","placeholder","handleBlur","submit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","statusText","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","className","onFocus","onBlur","required","onChange","target","value","onPasswordChange","_c","$RefreshReg$"],"sources":["/Users/grzesiekpasich/My/Work/Programming/Projects/Fit-Service-Project/frontend/client/src/pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import React, {SyntheticEvent, useState } from 'react';\nimport '../../styles/index.scss';\nimport { useNavigate } from 'react-router-dom';\nimport CreateAccountButton from '../../components/atoms/CreateAccountButton';\nimport PasswordInput from '../../components/atoms/PasswordRegisterInput';\n\nconst RegisterPage = () => {\n\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handlePassword = (password :string) => {\n    setPassword(password);\n  };\n\n  const handleConfirmPassword = (password :string) => {\n    setConfirmPassword(password);\n  };\n\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>, newPlaceholder: string) => {\n    event.currentTarget.placeholder = newPlaceholder;\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>, newPlaceholder: string) => {\n    event.currentTarget.placeholder = newPlaceholder;\n  };\n\n  const submit = async (e: SyntheticEvent) =>{\n    e.preventDefault();\n    if(password === confirmPassword) {\n      const response = await fetch('http://localhost:8000/api/register', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          email,\n          password,\n          name,\n          surname,\n          birthday\n        })\n      })\n      if(response.ok){\n        return navigate('/register_successful');\n      }\n      else{\n        console.error('Error', response.status, response.statusText);\n        return setMessage('Error');\n      }\n    }\n    else {\n      return setMessage('Passwords do not match');\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <h1>Register</h1>\n\n        <input \n          type='text' \n          className='register-input-form' \n          placeholder=\"Imię\" \n          onFocus={(event) => handleFocus(event, '')}\n          onBlur={(event) => handleBlur(event, 'Imię')}\n          required\n          onChange={e => setName(e.target.value)}\n        />\n\n        <input \n          type='text' \n          className='register-input-form' \n          placeholder=\"Nazwisko\" \n          onFocus={(event) => handleFocus(event, '')}\n          onBlur={(event) => handleBlur(event, 'Nazwisko')}\n          required\n          onChange={e => setSurname(e.target.value)}\n        />\n\n        <input \n          type='date' \n          className='register-input-form' \n          required\n          onChange={e => setBirthday(e.target.value)}\n        />\n\n        <input \n          type='email' \n          className='register-input-form' \n          placeholder=\"email@gmail.com\" \n          onFocus={(event) => handleFocus(event, '')}\n          onBlur={(event) => handleBlur(event, 'email@gmail.com')}\n          required\n          onChange={e => setEmail(e.target.value)}\n        />\n        <PasswordInput onPasswordChange={handlePassword} />\n        <PasswordInput onPasswordChange={handleConfirmPassword} />\n        <CreateAccountButton />\n      </form>\n      {message && <div>{message}</div>}\n    </div>\n  );\n}\n\nexport default RegisterPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}